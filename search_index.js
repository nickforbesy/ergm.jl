var documenterSearchIndex = {"docs":
[{"location":"models/#Specifying-Exponential-Random-Graph-Models","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"","category":"section"},{"location":"models/#Triplet-Subgraphs","page":"Specifying Exponential Random Graph Models","title":"Triplet Subgraphs","text":"","category":"section"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"Many of the pre-defined ERGMs are based on counting triplet subgraphs. In all of the pre-defined models, the sufficient statistics count induced triplet subgraphs. In the case of simple directed graphs, there are 16 isomorphism classes of triplet subgraphs, which are indexed as:","category":"page"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"(Image: )","category":"page"},{"location":"models/#Pre-defined-Models","page":"Specifying Exponential Random Graph Models","title":"Pre-defined Models","text":"","category":"section"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.SimpleModel","category":"page"},{"location":"models/#ergm.models.SimpleModel","page":"Specifying Exponential Random Graph Models","title":"ergm.models.SimpleModel","text":"SimpleModel(sufficient_statistics :: Vector{Function})\n\nA naively implemented model over sparse directed graphs.\n\nThis model should not be used in practice but provides a reference  implementation of the Model interface. This model calls the provided functions to compute sufficient statistics from scratch every time the statistics are queried rather than efficiently updating the statistics as the state is incrementally changed and caching them.\n\nArguments\n\nsufficient_statistics :: Vector{Float64}: a vector of functions, each of   which takes a SparseDirectedGraph and returns the value of some statistic.\n\n\n\n\n\n","category":"type"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.DirectedSpatialTripletModel","category":"page"},{"location":"models/#ergm.models.DirectedSpatialTripletModel","page":"Specifying Exponential Random Graph Models","title":"ergm.models.DirectedSpatialTripletModel","text":"DirectedSpatialTripletModel(motifs::Vector{Int}, node_embedding::Matrix{Float64}, motif_radius::Float64)\n\nDefine an ERGM on directed graphs with spatially local triplet motifs as its sufficient statistics.\n\nArguments\n\nmotifs :: Vec[Int]: indices of the triplet motifs to include (see Triplet Subgraphs section in docs).\nnode_embedding :: Matrix{Float64}: each row node_embedding[i, :] specifies the coordinates of the ith node in a Euclidean space.\nmotif_radius :: Float64: only motifs where the Euclidean distance between all pairs of involved nodes is less than motif_radius are considered local and are counted in the model statistics.\n\n\n\n\n\n","category":"type"},{"location":"models/#Custom-Models","page":"Specifying Exponential Random Graph Models","title":"Custom Models","text":"","category":"section"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"A model is a subtype M of the abstract type models.Model that implements the below interface. Models are also stateful, keeping track of one particular graph. This is useful for computing how the sufficient statistics change when making small changes to the underlying graph without having to recompute the statistics from scratch.","category":"page"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.get_state","category":"page"},{"location":"models/#ergm.models.get_state","page":"Specifying Exponential Random Graph Models","title":"ergm.models.get_state","text":"get_state(model :: Model) :: Any\n\nRetrieve the current model state.\n\n\n\n\n\n","category":"function"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.set_state","category":"page"},{"location":"models/#ergm.models.set_state","page":"Specifying Exponential Random Graph Models","title":"ergm.models.set_state","text":"set_state(model :: Model, state :: Any)\n\nSet the model's state to a particular graph. This will throw away all saved information about the previous state and start computing sufficient statistics from scratch for the new state.\n\n\n\n\n\n","category":"function"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.get_stats","category":"page"},{"location":"models/#ergm.models.get_stats","page":"Specifying Exponential Random Graph Models","title":"ergm.models.get_stats","text":"get_stats(model :: Model) :: Vector{Float64}\n\nReturn a vector of the sufficient statistics of the current model state.\n\n\n\n\n\n","category":"function"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.test_update","category":"page"},{"location":"models/#ergm.models.test_update","page":"Specifying Exponential Random Graph Models","title":"ergm.models.test_update","text":"test_update(update :: Any) :: Vector{Float64}\n\nCompute the new sufficient statistics if we were to apply an update to the current state.\n\nNote that this function does not actually change the model state. The form of an update depends on the particular model. Usually, an update will look like ((i, j), x), which corresponds to updating the value of the edge between nodes i and j to be x (for example, x can be true or false for unweighted graphs).\n\n\n\n\n\n","category":"function"},{"location":"models/","page":"Specifying Exponential Random Graph Models","title":"Specifying Exponential Random Graph Models","text":"models.apply_update","category":"page"},{"location":"models/#ergm.models.apply_update","page":"Specifying Exponential Random Graph Models","title":"ergm.models.apply_update","text":"apply_update(update :: Any)\n\nApply an update the model state.\n\nIn contrast to test_update, this function will actually mutate the model state. This function does not return the new sufficient statistics, since they can now be computed using get_stats because the model state was updated.\n\n\n\n\n\n","category":"function"}]
}
